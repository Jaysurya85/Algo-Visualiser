{"ast":null,"code":"import _slicedToArray from\"/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import QuickSort from'../../Algorithms/QuickSort';var QuickSortAnimation=function QuickSortAnimation(array,animationSpeed,primarycolor,secondarycolor){var _QuickSort=QuickSort(array),_QuickSort2=_slicedToArray(_QuickSort,2),animations=_QuickSort2[0],sortedArray=_QuickSort2[1];var i;// set of 8 4 compares 2 swaps\nfor(i=0;i<animations.length-1;i++){var isColorChange=i%6===0||i%6===1;var Bars=document.getElementsByClassName('bar');if(isColorChange===true){var _ret=function(){var color=i%6===0?secondarycolor:primarycolor;var _animations$i=_slicedToArray(animations[i],2),barOneIndex=_animations$i[0],barTwoIndex=_animations$i[1];if(barOneIndex===-1){return\"continue\";}var barOneStyle=Bars[barOneIndex].style;var barTwoStyle=Bars[barTwoIndex].style;setTimeout(function(){barOneStyle.backgroundColor=color;barTwoStyle.backgroundColor=color;},i*animationSpeed);}();if(_ret===\"continue\")continue;}else{var _ret2=function(){var _animations$i2=_slicedToArray(animations[i],2),barIndex=_animations$i2[0],newHeight=_animations$i2[1];if(barIndex===-1){return\"continue\";}var barStyle=Bars[barIndex].style;setTimeout(function(){barStyle.height=\"\".concat(newHeight,\"px\");},i*animationSpeed);}();if(_ret2===\"continue\")continue;}}return[sortedArray,i];};export default QuickSortAnimation;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortVisualization/QuickSortAnimation.js"],"names":["QuickSort","QuickSortAnimation","array","animationSpeed","primarycolor","secondarycolor","animations","sortedArray","i","length","isColorChange","Bars","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height"],"mappings":"+LAAA,MAAOA,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAOC,cAAP,CAAsBC,YAAtB,CAAmCC,cAAnC,CAAsD,gBAC5CL,SAAS,CAACE,KAAD,CADmC,0CACtEI,UADsE,gBAC3DC,WAD2D,gBAE7E,GAAIC,CAAAA,CAAJ,CACA;AACA,IAAMA,CAAC,CAAG,CAAV,CAAaA,CAAC,CAAGF,UAAU,CAACG,MAAX,CAAoB,CAArC,CAAwCD,CAAC,EAAzC,CAA6C,CAC3C,GAAME,CAAAA,aAAa,CAAIF,CAAC,CAAG,CAAJ,GAAU,CAAX,EAAkBA,CAAC,CAAG,CAAJ,GAAU,CAAlD,CACA,GAAMG,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAb,CACA,GAAGH,aAAa,GAAK,IAArB,CAA2B,qBACvB,GAAMI,CAAAA,KAAK,CAAIN,CAAC,CAAG,CAAJ,GAAU,CAAX,CAAgBH,cAAhB,CAAiCD,YAA/C,CADuB,iCAEYE,UAAU,CAACE,CAAD,CAFtB,IAEhBO,WAFgB,kBAEHC,WAFG,kBAGvB,GAAGD,WAAW,GAAK,CAAC,CAApB,CAAuB,CACnB,iBACH,CACD,GAAME,CAAAA,WAAW,CAAGN,IAAI,CAACI,WAAD,CAAJ,CAAkBG,KAAtC,CACA,GAAMC,CAAAA,WAAW,CAAGR,IAAI,CAACK,WAAD,CAAJ,CAAkBE,KAAtC,CACAE,UAAU,CAAC,UAAM,CACbH,WAAW,CAACI,eAAZ,CAA8BP,KAA9B,CACAK,WAAW,CAACE,eAAZ,CAA8BP,KAA9B,CACH,CAHS,CAGRN,CAAC,CAAGL,cAHI,CAAV,CARuB,yBAInB,SAQP,CAZD,IAaK,wDAC6BG,UAAU,CAACE,CAAD,CADvC,IACMc,QADN,mBACgBC,SADhB,mBAED,GAAID,QAAQ,GAAK,CAAC,CAAlB,CAAqB,CACjB,iBACH,CACD,GAAME,CAAAA,QAAQ,CAAGb,IAAI,CAACW,QAAD,CAAJ,CAAeJ,KAAhC,CACAE,UAAU,CAAC,UAAM,CACbI,QAAQ,CAACC,MAAT,WAAqBF,SAArB,OACH,CAFS,CAERf,CAAC,CAAGL,cAFI,CAAV,CANC,0BAGG,SAMP,CACJ,CACD,MAAO,CAACI,WAAD,CAAaC,CAAb,CAAP,CACC,CAhCH,CAkCA,cAAeP,CAAAA,kBAAf","sourcesContent":["import QuickSort from '../../Algorithms/QuickSort';\n\nconst QuickSortAnimation = (array,animationSpeed,primarycolor,secondarycolor) => {\n    const [animations,sortedArray] = QuickSort(array);\n    let i;\n    // set of 8 4 compares 2 swaps\n    for ( i = 0; i < animations.length - 1; i++) {\n      const isColorChange = (i % 6 === 0) || (i % 6 === 1);\n      const Bars = document.getElementsByClassName('bar');\n      if(isColorChange === true) {\n          const color = (i % 6 === 0) ? secondarycolor : primarycolor;\n          const [barOneIndex, barTwoIndex] = animations[i];\n          if(barOneIndex === -1) {\n              continue;\n          }\n          const barOneStyle = Bars[barOneIndex].style;\n          const barTwoStyle = Bars[barTwoIndex].style;\n          setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n          },i * animationSpeed);\n      }\n      else {\n          const [barIndex, newHeight] = animations[i];\n          if (barIndex === -1) {\n              continue;\n          }\n          const barStyle = Bars[barIndex].style;\n          setTimeout(() => {\n              barStyle.height = `${newHeight}px`;\n          },i * animationSpeed);  \n      }\n  }\n  return [sortedArray,i]\n  }\n\nexport default QuickSortAnimation"]},"metadata":{},"sourceType":"module"}