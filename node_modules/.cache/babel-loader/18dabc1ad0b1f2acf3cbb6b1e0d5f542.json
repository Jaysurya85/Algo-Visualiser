{"ast":null,"code":"var _jsxFileName = \"/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortBuilder.js\";\nimport React, { Component } from 'react';\nimport './SortBuilder.css';\n\nclass SortBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [1, 2, 3]\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  } // To Reset the array\n\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < noOfBars; i++) {\n      array.push(Math.floor(Math.random() * (totalHeight - 100) + 20));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, array.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      key: index,\n      style: {\n        height: `${value}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default SortBuilder;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortBuilder.js"],"names":["React","Component","SortBuilder","state","array","componentDidMount","resetArray","i","noOfBars","push","Math","floor","random","totalHeight","setState","render","map","value","index","height"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,mBAAP;;AACA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAEnCE,KAFmC,GAE3B;AACJC,MAAAA,KAAK,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AADF,KAF2B;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACD,GARgC,CAUjC;;;AACAA,EAAAA,UAAU,GAAE;AACV,UAAMF,KAAK,GAAE,EAAb;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,QAApB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/BH,MAAAA,KAAK,CAACK,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeC,WAAW,GAAC,GAA3B,IAAgC,EAA3C,CAAX;AACH;;AACD,SAAKC,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd;AACD;;AAEHW,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACX,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHC,KAAK,CAACY,GAAN,CAAU,CAACC,KAAD,EAAOC,KAAP,kBACP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEA,KAA1B;AACA,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,GAAEF,KAAM;AAAjB,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADG,CADJ;AAQH;;AA7BkC;;AAgCnC,eAAef,WAAf","sourcesContent":["import React,{Component} from 'react';\nimport './SortBuilder.css'\nclass SortBuilder extends Component{\n\nstate = {\n    array:[1,2,3]\n}\n\ncomponentDidMount(){\n    this.resetArray();\n  }\n  \n  // To Reset the array\n  resetArray(){\n    const array= [];\n    for (let i = 0; i < noOfBars; i++) {\n        array.push(Math.floor(Math.random()*(totalHeight-100)+20));\n    } \n    this.setState({array}); \n  }\n\nrender(){\n    const {array} = this.state;\n    return(\n        <div className=\"container\">\n    {array.map((value,index)=>(\n        <div className=\"bar\" key={index}\n        style={{height:`${value}px`}}></div>\n        ))}\n    </div>\n    )\n}\n}\n\nexport default SortBuilder;"]},"metadata":{},"sourceType":"module"}