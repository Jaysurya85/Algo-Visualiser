{"ast":null,"code":"const SelectionSort = array => {\n  let animations = [];\n  if (array.length <= 1) return array;\n  sortHelper(array, animations); //const jsSortedArray = array.slice().sort((a, b) => a - b);\n  //console.log(\"sort works correctly? \",AreEqual(jsSortedArray, array));\n\n  return [animations, array];\n}; //SelectionSort([7,2,1,6]);\n\n\nfunction sortHelper(array, animations) {\n  for (let i = 0; i < array.length - 1; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < array.length; j++) {\n      if (i > 0) animations.push([1, i - 1, i]);\n      animations.push([2, j, min]);\n      animations.push([3, j, min]);\n\n      if (array[j] < array[min]) {\n        min = j;\n      }\n    }\n\n    animations.push([4, i, array[min]]);\n    animations.push([4, min, array[i]]);\n    swap(array, i, min);\n  }\n}\n\nfunction swap(array, a, b) {\n  let temp = array[a];\n  array[a] = array[b];\n  array[b] = temp;\n} //to check the algorithm\n// function AreEqual(jsSortedArray, array) {\n//     if (jsSortedArray.length !== array.length) {\n//         return false;\n//     }\n//     for (let i = 0; i < jsSortedArray.length; i++) {\n//       if (jsSortedArray[i] !== array[i]) {\n//         return false;\n//       }\n//     }\n//     return true;\n// }\n\n\nexport default SelectionSort;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Algorithms/SelectionSort.js"],"names":["SelectionSort","array","animations","length","sortHelper","i","min","j","push","swap","a","b","temp"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,KAAD,IAAW;AAC7B,MAAIC,UAAU,GAAI,EAAlB;AACA,MAAGD,KAAK,CAACE,MAAN,IAAc,CAAjB,EAAmB,OAAOF,KAAP;AACnBG,EAAAA,UAAU,CAACH,KAAD,EAAOC,UAAP,CAAV,CAH6B,CAI7B;AACA;;AACA,SAAO,CAACA,UAAD,EAAYD,KAAZ,CAAP;AACH,CAPD,C,CAQA;;;AACA,SAASG,UAAT,CAAoBH,KAApB,EAA0BC,UAA1B,EAAsC;AAElC,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,KAAK,CAACE,MAAN,GAAa,CAA3B,EAA6BE,CAAC,EAA9B,EAAiC;AAE7B,QAAIC,GAAG,GAAGD,CAAV;;AACA,SAAI,IAAIE,CAAC,GAACF,CAAC,GAAC,CAAZ,EAAcE,CAAC,GAACN,KAAK,CAACE,MAAtB,EAA6BI,CAAC,EAA9B,EAAiC;AAC7B,UAAGF,CAAC,GAAC,CAAL,EAAOH,UAAU,CAACM,IAAX,CAAgB,CAAC,CAAD,EAAGH,CAAC,GAAC,CAAL,EAAOA,CAAP,CAAhB;AACPH,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAAC,CAAD,EAAGD,CAAH,EAAKD,GAAL,CAAhB;AACAJ,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAAC,CAAD,EAAGD,CAAH,EAAKD,GAAL,CAAhB;;AACD,UAAGL,KAAK,CAACM,CAAD,CAAL,GAASN,KAAK,CAACK,GAAD,CAAjB,EAAuB;AACnBA,QAAAA,GAAG,GAAGC,CAAN;AACH;AACH;;AACDL,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAAC,CAAD,EAAGH,CAAH,EAAKJ,KAAK,CAACK,GAAD,CAAV,CAAhB;AACAJ,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAAC,CAAD,EAAGF,GAAH,EAAOL,KAAK,CAACI,CAAD,CAAZ,CAAhB;AACAI,IAAAA,IAAI,CAACR,KAAD,EAAOI,CAAP,EAASC,GAAT,CAAJ;AACH;AAEJ;;AACD,SAASG,IAAT,CAAcR,KAAd,EAAoBS,CAApB,EAAsBC,CAAtB,EAAwB;AACpB,MAAIC,IAAI,GAAGX,KAAK,CAACS,CAAD,CAAhB;AACAT,EAAAA,KAAK,CAACS,CAAD,CAAL,GAAWT,KAAK,CAACU,CAAD,CAAhB;AACAV,EAAAA,KAAK,CAACU,CAAD,CAAL,GAAWC,IAAX;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,aAAf","sourcesContent":["const SelectionSort = (array) => {\n    let animations  = [];\n    if(array.length<=1)return array;\n    sortHelper(array,animations);\n    //const jsSortedArray = array.slice().sort((a, b) => a - b);\n    //console.log(\"sort works correctly? \",AreEqual(jsSortedArray, array));\n    return [animations,array];\n}\n//SelectionSort([7,2,1,6]);\nfunction sortHelper(array,animations) {\n\n    for(let i=0;i<array.length-1;i++){\n        \n        let min = i;\n        for(let j=i+1;j<array.length;j++){\n            if(i>0)animations.push([1,i-1,i]);\n            animations.push([2,j,min]);\n            animations.push([3,j,min]);\n           if(array[j]<array[min]){\n               min = j;\n           }\n        }\n        animations.push([4,i,array[min]]);\n        animations.push([4,min,array[i]]);\n        swap(array,i,min)\n    }\n\n}  \nfunction swap(array,a,b){\n    let temp = array[a];\n    array[a] = array[b];\n    array[b] = temp;\n}\n\n//to check the algorithm\n// function AreEqual(jsSortedArray, array) {\n//     if (jsSortedArray.length !== array.length) {\n//         return false;\n//     }\n//     for (let i = 0; i < jsSortedArray.length; i++) {\n//       if (jsSortedArray[i] !== array[i]) {\n//         return false;\n//       }\n//     }\n//     return true;\n// }\n\nexport default SelectionSort;"]},"metadata":{},"sourceType":"module"}