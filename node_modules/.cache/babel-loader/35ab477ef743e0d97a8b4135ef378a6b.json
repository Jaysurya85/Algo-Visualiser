{"ast":null,"code":"import _slicedToArray from\"/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import BubbleSort from'../../Algorithms/BubbleSort';var BubbleSortAnimation=function BubbleSortAnimation(array,animationSpeed,primarycolor,secondarycolor){var _BubbleSort=BubbleSort(array),_BubbleSort2=_slicedToArray(_BubbleSort,2),animations=_BubbleSort2[0],sortedArray=_BubbleSort2[1];var i;var _loop=function _loop(){var bars=document.getElementsByClassName('bar');// sets of 4 first 2 shows compare the next two swaps\nvar isColorChange=i%4!==2&&i%4!==3;if(isColorChange){var _animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];var barOneStyle=bars[barOneIdx].style;var barTwoStyle=bars[barTwoIdx].style;var color=i%4===0?secondarycolor:primarycolor;setTimeout(function(){barOneStyle.backgroundColor=color;barTwoStyle.backgroundColor=color;},i*animationSpeed);// everyloop while wait for additinal 10 sec than the previous loop\n}else{var _animations$i2=_slicedToArray(animations[i],2),_barOneIdx=_animations$i2[0],newHeight=_animations$i2[1];// else triggered\n// -1 means no swap took place so skip\nif(_barOneIdx===-1){return\"continue\";}else{setTimeout(function(){var barOneStyle=bars[_barOneIdx].style;barOneStyle.height=\"\".concat(newHeight,\"px\");},i*animationSpeed);}}};for(i=0;i<animations.length;i++){var _ret=_loop();if(_ret===\"continue\")continue;}return[sortedArray,i];};export default BubbleSortAnimation;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortVisualization/BubleSortAnimation.js"],"names":["BubbleSort","BubbleSortAnimation","array","animationSpeed","primarycolor","secondarycolor","animations","sortedArray","i","bars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","length"],"mappings":"+LAAA,MAAOA,CAAAA,UAAP,KAAuB,6BAAvB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAOC,cAAP,CAAsBC,YAAtB,CAAmCC,cAAnC,CAAqD,iBAC5CL,UAAU,CAACE,KAAD,CADkC,4CACtEI,UADsE,iBAC3DC,WAD2D,iBAE7E,GAAIC,CAAAA,CAAJ,CAF6E,2BAI3E,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAb,CACA;AACA,GAAMC,CAAAA,aAAa,CAAIJ,CAAC,CAAG,CAAJ,GAAU,CAAV,EAAeA,CAAC,CAAC,CAAF,GAAO,CAA7C,CACA,GAAII,aAAJ,CAAmB,kCACaN,UAAU,CAACE,CAAD,CADvB,IACVK,SADU,kBACAC,SADA,kBAEjB,GAAMC,CAAAA,WAAW,CAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC,CACA,GAAMC,CAAAA,WAAW,CAAGR,IAAI,CAACK,SAAD,CAAJ,CAAgBE,KAApC,CACA,GAAME,CAAAA,KAAK,CAAGV,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcH,cAAd,CAA+BD,YAA7C,CACAe,UAAU,CAAC,UAAM,CACfJ,WAAW,CAACK,eAAZ,CAA8BF,KAA9B,CACAD,WAAW,CAACG,eAAZ,CAA8BF,KAA9B,CACD,CAHS,CAGRV,CAAC,CAACL,cAHM,CAAV,CAGqB;AACtB,CATD,IAUK,mCAC4BG,UAAU,CAACE,CAAD,CADtC,IACIK,UADJ,mBACeQ,SADf,mBAEH;AACA;AACA,GAAGR,UAAS,GAAG,CAAC,CAAhB,CAAkB,CAChB,iBACD,CAFD,IAGI,CACFM,UAAU,CAAC,UAAM,CACf,GAAMJ,CAAAA,WAAW,CAAGN,IAAI,CAACI,UAAD,CAAJ,CAAgBG,KAApC,CACAD,WAAW,CAACO,MAAZ,WAAwBD,SAAxB,OACD,CAHS,CAGRb,CAAC,CAACL,cAHM,CAAV,CAID,CAEF,CA/B0E,EAG7E,IAAKK,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGF,UAAU,CAACiB,MAA3B,CAAmCf,CAAC,EAApC,CAAwC,uCAmBlC,SAUL,CACD,MAAO,CAACD,WAAD,CAAaC,CAAb,CAAP,CACC,CAlCL,CAoCI,cAAeP,CAAAA,mBAAf","sourcesContent":["import BubbleSort from '../../Algorithms/BubbleSort';\n\nconst BubbleSortAnimation = (array,animationSpeed,primarycolor,secondarycolor) =>{\n    const [animations,sortedArray] = BubbleSort(array);\n    let i;\n    for (i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('bar');\n      // sets of 4 first 2 shows compare the next two swaps\n      const isColorChange = (i % 4 !== 2 && i%4 !==3);\n      if (isColorChange) {\n        const [barOneIdx,barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = i % 4 === 0 ? secondarycolor : primarycolor;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        },i*animationSpeed); // everyloop while wait for additinal 10 sec than the previous loop\n      } \n      else {\n        const [barOneIdx, newHeight] = animations[i];\n        // else triggered\n        // -1 means no swap took place so skip\n        if(barOneIdx===-1){\n          continue;\n        }\n        else{\n          setTimeout(() => {\n            const barOneStyle = bars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          },i*animationSpeed);\n        }\n        \n      }\n    }\n    return [sortedArray,i];\n    }\n\n    export default BubbleSortAnimation;"]},"metadata":{},"sourceType":"module"}