{"ast":null,"code":"import BubbleSort from '../../Algorithms/BubbleSort';\n\nconst BubbleSortAnimation = (array, animationSpeed, primarycolor) => {\n  const [animations, sortedArray] = BubbleSort(array);\n  let i;\n\n  for (i = 0; i < animations.length; i++) {\n    const bars = document.getElementsByClassName('bar'); // sets of 4 first 2 shows compare the next two swaps\n\n    const isColorChange = i % 4 !== 2 && i % 4 !== 3;\n\n    if (isColorChange) {\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOneStyle = bars[barOneIdx].style;\n      const barTwoStyle = bars[barTwoIdx].style;\n      const color = i % 4 === 0 ? {\n        primarycolor\n      } : 'aqua';\n      setTimeout(() => {\n        barOneStyle.backgroundColor = color;\n        barTwoStyle.backgroundColor = color;\n      }, i * animationSpeed); // everyloop while wait for additinal 10 sec than the previous loop\n    } else {\n      const [barOneIdx, newHeight] = animations[i]; // else triggered\n      // -1 means no swap took place so skip\n\n      if (barOneIdx === -1) {\n        continue;\n      } else {\n        setTimeout(() => {\n          const barOneStyle = bars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * animationSpeed);\n      }\n    }\n  }\n\n  return [sortedArray, i];\n};\n\nexport default BubbleSortAnimation;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortVisualization/BubleSortAnimation.js"],"names":["BubbleSort","BubbleSortAnimation","array","animationSpeed","primarycolor","animations","sortedArray","i","length","bars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAOC,cAAP,EAAsBC,YAAtB,KAAsC;AAC9D,QAAM,CAACC,UAAD,EAAYC,WAAZ,IAA2BN,UAAU,CAACE,KAAD,CAA3C;AACA,MAAIK,CAAJ;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,UAAU,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAME,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAb,CADsC,CAEtC;;AACA,UAAMC,aAAa,GAAIL,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeA,CAAC,GAAC,CAAF,KAAO,CAA7C;;AACA,QAAIK,aAAJ,EAAmB;AACjB,YAAM,CAACC,SAAD,EAAWC,SAAX,IAAwBT,UAAU,CAACE,CAAD,CAAxC;AACA,YAAMQ,WAAW,GAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC;AACA,YAAMC,WAAW,GAAGR,IAAI,CAACK,SAAD,CAAJ,CAAgBE,KAApC;AACA,YAAME,KAAK,GAAGX,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc;AAACH,QAAAA;AAAD,OAAd,GAA+B,MAA7C;AACAe,MAAAA,UAAU,CAAC,MAAM;AACfJ,QAAAA,WAAW,CAACK,eAAZ,GAA8BF,KAA9B;AACAD,QAAAA,WAAW,CAACG,eAAZ,GAA8BF,KAA9B;AACD,OAHS,EAGRX,CAAC,GAACJ,cAHM,CAAV,CALiB,CAQI;AACtB,KATD,MAUK;AACH,YAAM,CAACU,SAAD,EAAYQ,SAAZ,IAAyBhB,UAAU,CAACE,CAAD,CAAzC,CADG,CAEH;AACA;;AACA,UAAGM,SAAS,KAAG,CAAC,CAAhB,EAAkB;AAChB;AACD,OAFD,MAGI;AACFM,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMJ,WAAW,GAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC;AACAD,UAAAA,WAAW,CAACO,MAAZ,GAAsB,GAAED,SAAU,IAAlC;AACD,SAHS,EAGRd,CAAC,GAACJ,cAHM,CAAV;AAID;AAEF;AACF;;AACD,SAAO,CAACG,WAAD,EAAaC,CAAb,CAAP;AACC,CAlCL;;AAoCI,eAAeN,mBAAf","sourcesContent":["import BubbleSort from '../../Algorithms/BubbleSort';\n\nconst BubbleSortAnimation = (array,animationSpeed,primarycolor) =>{\n    const [animations,sortedArray] = BubbleSort(array);\n    let i;\n    for (i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('bar');\n      // sets of 4 first 2 shows compare the next two swaps\n      const isColorChange = (i % 4 !== 2 && i%4 !==3);\n      if (isColorChange) {\n        const [barOneIdx,barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = i % 4 === 0 ? {primarycolor} : 'aqua';\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        },i*animationSpeed); // everyloop while wait for additinal 10 sec than the previous loop\n      } \n      else {\n        const [barOneIdx, newHeight] = animations[i];\n        // else triggered\n        // -1 means no swap took place so skip\n        if(barOneIdx===-1){\n          continue;\n        }\n        else{\n          setTimeout(() => {\n            const barOneStyle = bars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          },i*animationSpeed);\n        }\n        \n      }\n    }\n    return [sortedArray,i];\n    }\n\n    export default BubbleSortAnimation;"]},"metadata":{},"sourceType":"module"}