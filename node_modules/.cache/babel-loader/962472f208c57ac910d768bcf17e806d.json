{"ast":null,"code":"var BubbleSort=function BubbleSort(array){var animations=[];if(array.length<=1)return array;Sorthelper(array,animations);return[animations,array];};function Sorthelper(unsorted,animations){var N=unsorted.length;for(var i=0;i<N-1;i++){for(var j=0;j<N-1-i;j++){// to show color change to show we are comparing\nanimations.push([j,j+1]);// once shown we have to revert back so push again\nanimations.push([j,j+1]);if(unsorted[j]>unsorted[j+1]){animations.push([j,unsorted[j+1]]);animations.push([j+1,unsorted[j]]);swap(unsorted,j,j+1);}else{animations.push([-1,-1]);animations.push([-1,-1]);}}}}// swapping the 2 elements\nfunction swap(auxillaryArray,a,b){var temp=auxillaryArray[a];auxillaryArray[a]=auxillaryArray[b];auxillaryArray[b]=temp;}export default BubbleSort;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Algorithms/BubbleSort.js"],"names":["BubbleSort","array","animations","length","Sorthelper","unsorted","N","i","j","push","swap","auxillaryArray","a","b","temp"],"mappings":"AAAA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAID,KAAK,CAACE,MAAN,EAAgB,CAApB,CAAuB,MAAOF,CAAAA,KAAP,CACvBG,UAAU,CAACH,KAAD,CAAQC,UAAR,CAAV,CACA,MAAO,CAACA,UAAD,CAAYD,KAAZ,CAAP,CACH,CALD,CAOA,QAASG,CAAAA,UAAT,CAAoBC,QAApB,CAA6BH,UAA7B,CAAwC,CACpC,GAAII,CAAAA,CAAC,CAAGD,QAAQ,CAACF,MAAjB,CACA,IAAI,GAAII,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACD,CAAC,CAAC,CAAhB,CAAkBC,CAAC,EAAnB,CAAsB,CAClB,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACF,CAAC,CAAC,CAAF,CAAIC,CAAlB,CAAoBC,CAAC,EAArB,CAAwB,CACpB;AACAN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,CAAGA,CAAC,CAAC,CAAL,CAAhB,EACA;AACAN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,CAAGA,CAAC,CAAC,CAAL,CAAhB,EACA,GAAGH,QAAQ,CAACG,CAAD,CAAR,CAAYH,QAAQ,CAACG,CAAC,CAAC,CAAH,CAAvB,CAA6B,CACzBN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,CAAGH,QAAQ,CAACG,CAAC,CAAC,CAAH,CAAX,CAAhB,EACAN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAKH,QAAQ,CAACG,CAAD,CAAb,CAAhB,EACAE,IAAI,CAACL,QAAD,CAAUG,CAAV,CAAYA,CAAC,CAAC,CAAd,CAAJ,CACH,CAJD,IAKI,CACAN,UAAU,CAACO,IAAX,CAAgB,CAAC,CAAC,CAAF,CAAI,CAAC,CAAL,CAAhB,EACAP,UAAU,CAACO,IAAX,CAAgB,CAAC,CAAC,CAAF,CAAI,CAAC,CAAL,CAAhB,EACH,CACJ,CACJ,CACJ,CACD;AAEA,QAASC,CAAAA,IAAT,CAAcC,cAAd,CAA8BC,CAA9B,CAAiCC,CAAjC,CAAoC,CAChC,GAAIC,CAAAA,IAAI,CAAGH,cAAc,CAACC,CAAD,CAAzB,CACAD,cAAc,CAACC,CAAD,CAAd,CAAoBD,cAAc,CAACE,CAAD,CAAlC,CACAF,cAAc,CAACE,CAAD,CAAd,CAAoBC,IAApB,CACH,CAED,cAAed,CAAAA,UAAf","sourcesContent":["const BubbleSort = (array) => {\n    let animations = [];\n    if (array.length <= 1) return array;\n    Sorthelper(array, animations);\n    return [animations,array];\n}\n\nfunction Sorthelper(unsorted,animations){\n    let N = unsorted.length;\n    for(let i=0;i<N-1;i++){\n        for(let j=0;j<N-1-i;j++){\n            // to show color change to show we are comparing\n            animations.push([j,j+1]);\n            // once shown we have to revert back so push again\n            animations.push([j,j+1]);\n            if(unsorted[j]>unsorted[j+1]){\n                animations.push([j,unsorted[j+1]]);\n                animations.push([j+1,unsorted[j]]);\n                swap(unsorted,j,j+1);\n            }\n            else{\n                animations.push([-1,-1]);\n                animations.push([-1,-1]);\n            }\n        }\n    }\n}\n// swapping the 2 elements\n\nfunction swap(auxillaryArray, a, b) {\n    let temp = auxillaryArray[a];\n    auxillaryArray[a] = auxillaryArray[b];\n    auxillaryArray[b] = temp;\n}\n\nexport default BubbleSort;"]},"metadata":{},"sourceType":"module"}