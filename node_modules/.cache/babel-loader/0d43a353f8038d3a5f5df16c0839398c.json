{"ast":null,"code":"import _slicedToArray from\"/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import SelectionSort from'../../Algorithms/SelectionSort';var SelectionSortAnimation=function SelectionSortAnimation(array,animationSpeed,primarycolor,secondarycolor){var _SelectionSort=SelectionSort(array),_SelectionSort2=_slicedToArray(_SelectionSort,2),animations=_SelectionSort2[0],sortedArray=_SelectionSort2[1];var i;var _loop=function _loop(){var bars=document.getElementsByClassName('bar');var swap=animations[i][0];// 1 is color change of the ith bar\n// 2 and 3 are color change of the compare \n// 4 is the swap taking place\nif(swap===1){var barOneIdx=animations[i][1];var barTwoIdx=animations[i][2];var barOneStyle=bars[barOneIdx].style;var barTwoStyle=bars[barTwoIdx].style;setTimeout(function(){barOneStyle.backgroundColor=primarycolor;barTwoStyle.backgroundColor='yellow';},i*animationSpeed);}else if(swap===2||swap===3){var _animations$i=_slicedToArray(animations[i],3),temp=_animations$i[0],_barOneIdx=_animations$i[1],_barTwoIdx=_animations$i[2];var _barOneStyle=bars[_barOneIdx].style;var _barTwoStyle=bars[_barTwoIdx].style;var color=temp===2?secondarycolor:primarycolor;setTimeout(function(){_barOneStyle.backgroundColor=color;_barTwoStyle.backgroundColor=color;},i*animationSpeed);}else{var barIdx=animations[i][1];var newHeight=animations[i][2];setTimeout(function(){var barStyle=bars[barIdx].style;barStyle.height=\"\".concat(newHeight,\"px\");},i*animationSpeed);}};for(i=0;i<animations.length;i++){_loop();}return[sortedArray,i];};export default SelectionSortAnimation;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortVisualization/SelectionSortAnimation.js"],"names":["SelectionSort","SelectionSortAnimation","array","animationSpeed","primarycolor","secondarycolor","animations","sortedArray","i","bars","document","getElementsByClassName","swap","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","temp","color","barIdx","newHeight","barStyle","height","length"],"mappings":"+LAAA,MAAOA,CAAAA,aAAP,KAA0B,gCAA1B,CAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAOC,cAAP,CAAsBC,YAAtB,CAAmCC,cAAnC,CAAsD,oBAChDL,aAAa,CAACE,KAAD,CADmC,kDAC1EI,UAD0E,oBAC/DC,WAD+D,oBAEjF,GAAIC,CAAAA,CAAJ,CAFiF,2BAI/E,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAb,CACA,GAAMC,CAAAA,IAAI,CAAGN,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAAb,CACA;AACA;AACA;AACA,GAAGI,IAAI,GAAG,CAAV,CAAY,CACV,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAAlB,CACA,GAAMM,CAAAA,SAAS,CAAGR,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAAlB,CACA,GAAMO,CAAAA,WAAW,CAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC,CACA,GAAMC,CAAAA,WAAW,CAAGR,IAAI,CAACK,SAAD,CAAJ,CAAgBE,KAApC,CACAE,UAAU,CAAC,UAAM,CACfH,WAAW,CAACI,eAAZ,CAA8Bf,YAA9B,CACAa,WAAW,CAACE,eAAZ,CAA8B,QAA9B,CACD,CAHS,CAGPX,CAAC,CAACL,cAHK,CAAV,CAID,CATD,IAUK,IAAGS,IAAI,GAAG,CAAP,EAAYA,IAAI,GAAG,CAAtB,CAAwB,kCACUN,UAAU,CAACE,CAAD,CADpB,IACpBY,IADoB,kBACdP,UADc,kBACHC,UADG,kBAE3B,GAAMC,CAAAA,YAAW,CAAGN,IAAI,CAACI,UAAD,CAAJ,CAAgBG,KAApC,CACA,GAAMC,CAAAA,YAAW,CAAGR,IAAI,CAACK,UAAD,CAAJ,CAAgBE,KAApC,CACA,GAAMK,CAAAA,KAAK,CAAGD,IAAI,GAAK,CAAT,CAAaf,cAAb,CAA8BD,YAA5C,CACAc,UAAU,CAAC,UAAM,CACfH,YAAW,CAACI,eAAZ,CAA8BE,KAA9B,CACAJ,YAAW,CAACE,eAAZ,CAA8BE,KAA9B,CACD,CAHS,CAGPb,CAAC,CAACL,cAHK,CAAV,CAID,CATI,IAUD,CACF,GAAMmB,CAAAA,MAAM,CAAGhB,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAAf,CACA,GAAMe,CAAAA,SAAS,CAAGjB,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAAlB,CACIU,UAAU,CAAC,UAAM,CACf,GAAMM,CAAAA,QAAQ,CAAGf,IAAI,CAACa,MAAD,CAAJ,CAAaN,KAA9B,CACAQ,QAAQ,CAACC,MAAT,WAAqBF,SAArB,OACD,CAHS,CAGPf,CAAC,CAACL,cAHK,CAAV,CAIL,CApC8E,EAGjF,IAAIK,CAAC,CAAC,CAAN,CAAQA,CAAC,CAACF,UAAU,CAACoB,MAArB,CAA4BlB,CAAC,EAA7B,CAAgC,SAkC/B,CACD,MAAO,CAACD,WAAD,CAAaC,CAAb,CAAP,CACC,CAvCL,CAyCA,cAAeP,CAAAA,sBAAf","sourcesContent":["import SelectionSort from '../../Algorithms/SelectionSort';\n\nconst SelectionSortAnimation = (array,animationSpeed,primarycolor,secondarycolor) => {\n    const [animations,sortedArray] = SelectionSort(array);\n    let i;\n    for(i=0;i<animations.length;i++){\n      const bars = document.getElementsByClassName('bar');\n      const swap = animations[i][0];\n      // 1 is color change of the ith bar\n      // 2 and 3 are color change of the compare \n      // 4 is the swap taking place\n      if(swap===1){\n        const barOneIdx = animations[i][1];\n        const barTwoIdx = animations[i][2];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = primarycolor;\n          barTwoStyle.backgroundColor = 'yellow';\n        }, i*animationSpeed);\n      }\n      else if(swap===2 || swap===3){\n        const [temp ,barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = temp === 2 ? secondarycolor : primarycolor;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i*animationSpeed);\n      }\n      else{\n        const barIdx = animations[i][1];\n        const newHeight = animations[i][2];\n            setTimeout(() => {\n              const barStyle = bars[barIdx].style;\n              barStyle.height = `${newHeight}px`;\n            }, i*animationSpeed);\n      }\n    }\n    return [sortedArray,i]\n    }\n\nexport default SelectionSortAnimation;"]},"metadata":{},"sourceType":"module"}