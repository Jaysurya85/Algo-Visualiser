{"ast":null,"code":"const SelectionSortAnimation = array => {\n  const [animations, sortedArray] = SelectionSort(array);\n  const animationSpeed = 0.6;\n  let i;\n\n  for (i = 0; i < animations.length; i++) {\n    const bars = document.getElementsByClassName('bar');\n    const swap = animations[i][0]; // 1 is color change of the ith bar\n    // 2 and 3 are color change of the compare \n    // 4 is the swap taking place\n\n    if (swap === 1) {\n      const barOneIdx = animations[i][1];\n      const barTwoIdx = animations[i][2];\n      const barOneStyle = bars[barOneIdx].style;\n      const barTwoStyle = bars[barTwoIdx].style;\n      setTimeout(() => {\n        barOneStyle.backgroundColor = 'aqua';\n        barTwoStyle.backgroundColor = 'yellow';\n      }, i * animationSpeed);\n    } else if (swap === 2 || swap === 3) {\n      const [temp, barOneIdx, barTwoIdx] = animations[i];\n      const barOneStyle = bars[barOneIdx].style;\n      const barTwoStyle = bars[barTwoIdx].style;\n      const color = temp === 2 ? 'red' : 'aqua';\n      setTimeout(() => {\n        barOneStyle.backgroundColor = color;\n        barTwoStyle.backgroundColor = color;\n      }, i * animationSpeed);\n    } else {\n      const barIdx = animations[i][1];\n      const newHeight = animations[i][2];\n      setTimeout(() => {\n        const barStyle = bars[barIdx].style;\n        barStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n\n  return [sortedArray, i];\n};\n\nexport default SelectionSortAnimation;","map":{"version":3,"sources":["/home/jaysurya/Desktop/web development/react projects/sorting-visualiser/src/Components/SortVisualization/SelectionSortAnimation.js"],"names":["SelectionSortAnimation","array","animations","sortedArray","SelectionSort","animationSpeed","i","length","bars","document","getElementsByClassName","swap","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","temp","color","barIdx","newHeight","barStyle","height"],"mappings":"AAAA,MAAMA,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,UAAD,EAAYC,WAAZ,IAA2BC,aAAa,CAACH,KAAD,CAA9C;AACA,QAAMI,cAAc,GAAG,GAAvB;AACA,MAAIC,CAAJ;;AACA,OAAIA,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACJ,UAAU,CAACK,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC9B,UAAME,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,CAAb;AACA,UAAMC,IAAI,GAAGT,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,CAAb,CAF8B,CAG9B;AACA;AACA;;AACA,QAAGK,IAAI,KAAG,CAAV,EAAY;AACV,YAAMC,SAAS,GAAGV,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,CAAlB;AACA,YAAMO,SAAS,GAAGX,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,CAAlB;AACA,YAAMQ,WAAW,GAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC;AACA,YAAMC,WAAW,GAAGR,IAAI,CAACK,SAAD,CAAJ,CAAgBE,KAApC;AACAE,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,WAAW,CAACI,eAAZ,GAA8B,MAA9B;AACAF,QAAAA,WAAW,CAACE,eAAZ,GAA8B,QAA9B;AACD,OAHS,EAGPZ,CAAC,GAACD,cAHK,CAAV;AAID,KATD,MAUK,IAAGM,IAAI,KAAG,CAAP,IAAYA,IAAI,KAAG,CAAtB,EAAwB;AAC3B,YAAM,CAACQ,IAAD,EAAOP,SAAP,EAAkBC,SAAlB,IAA+BX,UAAU,CAACI,CAAD,CAA/C;AACA,YAAMQ,WAAW,GAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,KAApC;AACA,YAAMC,WAAW,GAAGR,IAAI,CAACK,SAAD,CAAJ,CAAgBE,KAApC;AACA,YAAMK,KAAK,GAAGD,IAAI,KAAK,CAAT,GAAa,KAAb,GAAqB,MAAnC;AACAF,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,WAAW,CAACI,eAAZ,GAA8BE,KAA9B;AACAJ,QAAAA,WAAW,CAACE,eAAZ,GAA8BE,KAA9B;AACD,OAHS,EAGPd,CAAC,GAACD,cAHK,CAAV;AAID,KATI,MAUD;AACF,YAAMgB,MAAM,GAAGnB,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,CAAf;AACA,YAAMgB,SAAS,GAAGpB,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,CAAlB;AACIW,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMM,QAAQ,GAAGf,IAAI,CAACa,MAAD,CAAJ,CAAaN,KAA9B;AACAQ,QAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEF,SAAU,IAA/B;AACD,OAHS,EAGPhB,CAAC,GAACD,cAHK,CAAV;AAIL;AACF;;AACD,SAAO,CAACF,WAAD,EAAaG,CAAb,CAAP;AACC,CAxCL;;AA0CA,eAAeN,sBAAf","sourcesContent":["const SelectionSortAnimation = (array) => {\n    const [animations,sortedArray] = SelectionSort(array);\n    const animationSpeed = 0.6;\n    let i;\n    for(i=0;i<animations.length;i++){\n      const bars = document.getElementsByClassName('bar');\n      const swap = animations[i][0];\n      // 1 is color change of the ith bar\n      // 2 and 3 are color change of the compare \n      // 4 is the swap taking place\n      if(swap===1){\n        const barOneIdx = animations[i][1];\n        const barTwoIdx = animations[i][2];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = 'aqua';\n          barTwoStyle.backgroundColor = 'yellow';\n        }, i*animationSpeed);\n      }\n      else if(swap===2 || swap===3){\n        const [temp ,barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = temp === 2 ? 'red' : 'aqua';\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i*animationSpeed);\n      }\n      else{\n        const barIdx = animations[i][1];\n        const newHeight = animations[i][2];\n            setTimeout(() => {\n              const barStyle = bars[barIdx].style;\n              barStyle.height = `${newHeight}px`;\n            }, i*animationSpeed);\n      }\n    }\n    return [sortedArray,i]\n    }\n\nexport default SelectionSortAnimation;"]},"metadata":{},"sourceType":"module"}